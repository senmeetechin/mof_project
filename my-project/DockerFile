# Use a Node.js base image version 16
FROM node:16

# Set the working directory to /app
WORKDIR /app

# Copy the package.json and package-lock.json files to the container
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the app's source code to the container
COPY . .

# Build the React app
RUN npm run build

# Install Python and miniconda
RUN apt-get update && apt-get install -y python3
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
RUN chmod +x Miniconda3-latest-Linux-x86_64.sh
RUN ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda
ENV PATH /opt/conda/bin:$PATH

# Create and activate the MOF environment
COPY /env/mof_env.yml .
RUN conda env create -f mof_env.yml
RUN echo "conda activate mof_env" >> ~/.bashrc
SHELL ["/bin/bash", "-c"]
RUN conda init bash

# Create and activate the TF environment
COPY /env/tf_env.yml .
RUN conda env create -f tf_env.yml
RUN echo "conda activate tf_env" >> ~/.bashrc
SHELL ["/bin/bash", "-c"]
RUN conda init bash

# Install IPython kernel for both environments
RUN conda activate mof_env && python -m ipykernel install --user --name mof_env --display-name "mof_env"
RUN conda activate tf_env && python -m ipykernel install --user --name tf_env --display-name "tf_env"

# Expose the port that the Flask API will run on
EXPOSE 5000

# # Define the command that will run when the Docker container starts
# CMD ["conda", "run", "-n", "tf_env", "python", "run_api.py"]
