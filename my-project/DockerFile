# Use an official Python runtime as a parent image
FROM continuumio/miniconda3

# Set the working directory to /app
WORKDIR /app

# Copy the requirement for setting
COPY ./zeo\+\+-0.3.tar.gz /app/zeo\+\+-0.3.tar.gz
COPY ./env /app/env

# apt get required packages
RUN apt-get update
RUN apt-get install -y --no-install-recommends wget bzip2 ca-certificates gfortran build-essential

# Copy the zeo++ program and install it
RUN gunzip zeo\+\+-0.3.tar.gz
RUN tar xvf zeo\+\+-0.3.tar
WORKDIR /app/zeo\+\+-0.3/voro\+\+/src
RUN make
WORKDIR /app/zeo\+\+-0.3/
RUN make
WORKDIR /app

# Create mof_env conda environments
RUN conda create -n mof_env python=3.9
SHELL [ "conda", "run", "-n", "mof_env", "/bin/bash", "-c" ]
# RUN echo "conda activate mof_env" >> ~/.bashrc
# RUN /bin/bash -c "source ~/.bashrc"
RUN pip install numpy==1.22
RUN pip install pandas porE
RUN python -c "import numpy; import pandas; import pore"

# Create tf_env conda environments
RUN conda create -n tf_env tensorflow
# RUN echo "conda activate tf_env" >> ~/.bashrc
# RUN /bin/bash -c "source ~/.bashrc"
SHELL [ "conda", "run", "-n", "tf_env", "/bin/bash", "-c" ]
RUN pip install numpy pandas joblib scikit-learn
RUN python -c "import tensorflow; import numpy; import pandas; import joblib; import sklearn"

# Set base conda environments
# RUN echo "source activate base" >> ~/.bashrc
SHELL [ "conda", "run", "-n", "base", "/bin/bash", "-c" ]
RUN conda install -c anaconda flask flask-cors pandas
RUN python -c "import flask; import flask_cors; import pandas"
RUN conda clean -afy
RUN rm -rf /var/lib/apt/lists/*

# Copy current directory contents into the container at /app
COPY ./backend /app

# Make port 80 available to the world outside this container
EXPOSE 5000

# Run app.py when the container launches
CMD ["python", "./app.py"]
