# Use an official Python runtime as a parent image
FROM continuumio/miniconda3

# Set the working directory to /app
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY ./backend /app
COPY ./zeo\+\+-0.3.tar.gz /app/zeo\+\+-0.3.tar.gz
COPY ./env /app/env

# apt get required packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends wget bzip2 ca-certificates gfortran build-essential

# Create mof_env conda environments
RUN conda create -n mof_env python=3.9 && \
    echo "conda activate mof_env" >> ~/.bashrc && \
    /bin/bash -c "source ~/.bashrc" && \
    pip install numpy==1.22 && \
    pip install pandas porE

# Create tf_env conda environments
RUN conda create -n tf_env tensorflow && \
    echo "conda activate tf_env" >> ~/.bashrc && \
    /bin/bash -c "source ~/.bashrc" && \
    pip install numpy pandas joblib

# Set base conda environments
RUN echo "source activate base" >> ~/.bashrc && \
    conda install -c anaconda flask pandas && \
    conda clean -afy && \
    rm -rf /var/lib/apt/lists/*

# Copy the zeo++ program and install it
RUN gunzip zeo\+\+-0.3.tar.gz
RUN tar xvf zeo\+\+-0.3.tar
WORKDIR /app/zeo\+\+-0.3/voro\+\+/src
RUN make
WORKDIR /app/zeo\+\+-0.3/
RUN make
WORKDIR /app

# Make port 80 available to the world outside this container
EXPOSE 5000

# Run app.py when the container launches
CMD ["python", "./app.py"]
